// AUTOMATICALLY GENERATED. DO NOT EDIT.

part of cupertino_ffi.webkit;

/// Static methods for Objective-C class `WKAccessibilityWebPageObjectBase`.
/// See also instance methods in [WKAccessibilityWebPageObjectBasePointer].
///
/// Find detailed documentation at: [developer.apple.com/documentation/webkit?language=objc](https://developer.apple.com/documentation/webkit?language=objc)
class WKAccessibilityWebPageObjectBase extends Struct {
  /// Allocates a new instance of WKAccessibilityWebPageObjectBase.
  static Pointer<WKAccessibilityWebPageObjectBase> allocate() {
    _ensureDynamicLibraryHasBeenOpened();
    return _objc.allocateByClassName<WKAccessibilityWebPageObjectBase>(
        'WKAccessibilityWebPageObjectBase');
  }
}

/// Instance methods for [WKAccessibilityWebPageObjectBase] (Objective-C class `WKAccessibilityWebPageObjectBase`).
///
/// Find detailed documentation at: [developer.apple.com/documentation/webkit?language=objc](https://developer.apple.com/documentation/webkit?language=objc)
extension WKAccessibilityWebPageObjectBasePointer
    on Pointer<WKAccessibilityWebPageObjectBase> {
  /// Objective-C method `accessibilityFocusedUIElement`.
  @ObjcMethodInfo(
    selector: 'accessibilityFocusedUIElement',
    returnType: '@',
    parameterTypes: ['@', ':'],
  )
  Pointer accessibilityFocusedUIElement() {
    _ensureDynamicLibraryHasBeenOpened();
    return _objc_call.call_ptr_ptr_returns_ptr(
      this,
      _objc.getSelector(
        'accessibilityFocusedUIElement',
      ),
    );
  }

  /// Objective-C method `accessibilityRootObjectWrapper`.
  @ObjcMethodInfo(
    selector: 'accessibilityRootObjectWrapper',
    returnType: '@',
    parameterTypes: ['@', ':'],
  )
  Pointer accessibilityRootObjectWrapper() {
    _ensureDynamicLibraryHasBeenOpened();
    return _objc_call.call_ptr_ptr_returns_ptr(
      this,
      _objc.getSelector(
        'accessibilityRootObjectWrapper',
      ),
    );
  }

  /// Objective-C method `setRemoteParent:`.
  @ObjcMethodInfo(
    selector: 'setRemoteParent:',
    returnType: 'v',
    parameterTypes: ['@', ':', '@'],
  )
  Pointer setRemoteParent(
    Pointer arg,
  ) {
    _ensureDynamicLibraryHasBeenOpened();
    return _objc_call.call_ptr_ptr_ptr_returns_ptr(
      this,
      _objc.getSelector(
        'setRemoteParent:',
      ),
      arg,
    );
  }

  /// Objective-C method `setWebPage:`.
  @ObjcMethodInfo(
    selector: 'setWebPage:',
    returnType: 'v',
    parameterTypes: [
      '@',
      ':',
      '^{WebPage=^^?@^^?^^?{WeakPtrFactory<WebKit::WebPage>={RefPtr<WTF::WeakReference<WebKit::WebPage>, WTF::DumbPtrTraits<WTF::WeakReference<WebKit::WebPage> > >=^{WeakReference<WebKit::WebPage>}}}Q{unique_ptr<WebCore::Page, std::__1::default_delete<WebCore::Page> >={__compressed_pair<WebCore::Page *, std::__1::default_delete<WebCore::Page> >=^{Page}}}{RefPtr<WebKit::WebFrame, WTF::DumbPtrTraits<WebKit::WebFrame> >=^{WebFrame}}{RefPtr<WebKit::WebPageGroupProxy, WTF::DumbPtrTraits<WebKit::WebPageGroupProxy> >=^{WebPageGroupProxy}}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{IntSize=ii}{unique_ptr<WebKit::DrawingArea, std::__1::default_delete<WebKit::DrawingArea> >={__compressed_pair<WebKit::DrawingArea *, std::__1::default_delete<WebKit::DrawingArea> >=^{DrawingArea}}}B{HashSet<WebKit::PluginView *, WTF::PtrHash<WebKit::PluginView *>, WTF::HashTraits<WebKit::PluginView *> >={HashTable<WebKit::PluginView *, WebKit::PluginView *, WTF::IdentityExtractor, WTF::PtrHash<WebKit::PluginView *>, WTF::HashTraits<WebKit::PluginView *>, WTF::HashTraits<WebKit::PluginView *> >=^^{PluginView}IIII}}B{HashMap<unsigned long long, WTF::RefPtr<WebCore::TextCheckingRequest, WTF::DumbPtrTraits<WebCore::TextCheckingRequest> >, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebCore::TextCheckingRequest, WTF::DumbPtrTraits<WebCore::TextCheckingRequest> > > >={HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebCore::TextCheckingRequest, WTF::DumbPtrTraits<WebCore::TextCheckingRequest> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebCore::TextCheckingRequest, WTF::DumbPtrTraits<WebCore::TextCheckingRequest> > > >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::RefPtr<WebCore::TextCheckingRequest, WTF::DumbPtrTraits<WebCore::TextCheckingRequest> >, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebCore::TextCheckingRequest, WTF::DumbPtrTraits<WebCore::TextCheckingRequest> > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> >=^{KeyValuePair<unsigned long long, WTF::RefPtr<WebCore::TextCheckingRequest, WTF::DumbPtrTraits<WebCore::TextCheckingRequest> > >}IIII}}BB{Color=(?=Q^{ExtendedColor})}BBBBBBBBBBBBI{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{Timer<WebKit::WebPage>=^^?{Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> >=^{RunLoop}}{RetainPtr<__CFRunLoopTimer *>=^v}^{WebPage}}CBB{FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatPoint=ff}{RetainPtr<WKAccessibilityWebPageObject>=^v}{unique_ptr<WebKit::ViewGestureGeometryCollector, std::__1::default_delete<WebKit::ViewGestureGeometryCollector> >={__compressed_pair<WebKit::ViewGestureGeometryCollector *, std::__1::default_delete<WebKit::ViewGestureGeometryCollector> >=^{ViewGestureGeometryCollector}}}{RetainPtr<NSDictionary>=^v}{RefPtr<WebKit::PageBanner, WTF::DumbPtrTraits<WebKit::PageBanner> >=^{PageBanner}}{RefPtr<WebKit::PageBanner, WTF::DumbPtrTraits<WebKit::PageBanner> >=^{PageBanner}}{Timer<WebKit::WebPage>=^^?{Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> >=^{RunLoop}}{RetainPtr<__CFRunLoopTimer *>=^v}^{WebPage}}B{HashMap<unsigned long long, WTF::RefPtr<WebKit::WebUndoStep, WTF::DumbPtrTraits<WebKit::WebUndoStep> >, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::WebUndoStep, WTF::DumbPtrTraits<WebKit::WebUndoStep> > > >={HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::WebUndoStep, WTF::DumbPtrTraits<WebKit::WebUndoStep> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::WebUndoStep, WTF::DumbPtrTraits<WebKit::WebUndoStep> > > >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::RefPtr<WebKit::WebUndoStep, WTF::DumbPtrTraits<WebKit::WebUndoStep> >, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::WebUndoStep, WTF::DumbPtrTraits<WebKit::WebUndoStep> > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> >=^{KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::WebUndoStep, WTF::DumbPtrTraits<WebKit::WebUndoStep> > >}IIII}}{unique_ptr<API::InjectedBundle::PageContextMenuClient, std::__1::default_delete<API::InjectedBundle::PageContextMenuClient> >={__compressed_pair<API::InjectedBundle::PageContextMenuClient *, std::__1::default_delete<API::InjectedBundle::PageContextMenuClient> >=^{PageContextMenuClient}}}{unique_ptr<API::InjectedBundle::EditorClient, std::__1::default_delete<API::InjectedBundle::EditorClient> >={__compressed_pair<API::InjectedBundle::EditorClient *, std::__1::default_delete<API::InjectedBundle::EditorClient> >=^{EditorClient}}}{unique_ptr<API::InjectedBundle::FormClient, std::__1::default_delete<API::InjectedBundle::FormClient> >={__compressed_pair<API::InjectedBundle::FormClient *, std::__1::default_delete<API::InjectedBundle::FormClient> >=^{FormClient}}}{unique_ptr<API::InjectedBundle::PageLoaderClient, std::__1::default_delete<API::InjectedBundle::PageLoaderClient> >={__compressed_pair<API::InjectedBundle::PageLoaderClient *, std::__1::default_delete<API::InjectedBundle::PageLoaderClient> >=^{PageLoaderClient}}}{InjectedBundlePagePolicyClient={WKBundlePagePolicyClientV0={WKBundlePagePolicyClientBase=i^v}^?^?^?^?}}{unique_ptr<API::InjectedBundle::ResourceLoadClient, std::__1::default_delete<API::InjectedBundle::ResourceLoadClient> >={__compressed_pair<API::InjectedBundle::ResourceLoadClient *, std::__1::default_delete<API::InjectedBundle::ResourceLoadClient> >=^{ResourceLoadClient}}}{unique_ptr<API::InjectedBundle::PageUIClient, std::__1::default_delete<API::InjectedBundle::PageUIClient> >={__compressed_pair<API::InjectedBundle::PageUIClient *, std::__1::default_delete<API::InjectedBundle::PageUIClient> >=^{PageUIClient}}}{InjectedBundlePageFullScreenClient={WKBundlePageFullScreenClientV1={WKBundlePageFullScreenClientBase=i^v}^?^?^?^?^?^?}}{UniqueRef<WebKit::FindController>={unique_ptr<WebKit::FindController, std::__1::default_delete<WebKit::FindController> >={__compressed_pair<WebKit::FindController *, std::__1::default_delete<WebKit::FindController> >=^{FindController}}}}{RefPtr<WebKit::WebInspector, WTF::DumbPtrTraits<WebKit::WebInspector> >=^{WebInspector}}{RefPtr<WebKit::WebInspectorUI, WTF::DumbPtrTraits<WebKit::WebInspectorUI> >=^{WebInspectorUI}}{RefPtr<WebKit::RemoteWebInspectorUI, WTF::DumbPtrTraits<WebKit::RemoteWebInspectorUI> >=^{RemoteWebInspectorUI}}{unique_ptr<WebKit::WebPageInspectorTargetController, std::__1::default_delete<WebKit::WebPageInspectorTargetController> >={__compressed_pair<WebKit::WebPageInspectorTargetController *, std::__1::default_delete<WebKit::WebPageInspectorTargetController> >=^{WebPageInspectorTargetController}}}{RefPtr<WebKit::PlaybackSessionManager, WTF::DumbPtrTraits<WebKit::PlaybackSessionManager> >=^{PlaybackSessionManager}}{RefPtr<WebKit::VideoFullscreenManager, WTF::DumbPtrTraits<WebKit::VideoFullscreenManager> >=^{VideoFullscreenManager}}{RefPtr<WebKit::WebFullScreenManager, WTF::DumbPtrTraits<WebKit::WebFullScreenManager> >=^{WebFullScreenManager}}{RefPtr<WebKit::WebPopupMenu, WTF::DumbPtrTraits<WebKit::WebPopupMenu> >=^{WebPopupMenu}}{RefPtr<WebKit::WebContextMenu, WTF::DumbPtrTraits<WebKit::WebContextMenu> >=^{WebContextMenu}}^{WebColorChooser}{WeakPtr<WebKit::WebDataListSuggestionPicker>={RefPtr<WTF::WeakReference<WebKit::WebDataListSuggestionPicker>, WTF::DumbPtrTraits<WTF::WeakReference<WebKit::WebDataListSuggestionPicker> > >=^{WeakReference<WebKit::WebDataListSuggestionPicker>}}}{RefPtr<WebKit::WebOpenPanelResultListener, WTF::DumbPtrTraits<WebKit::WebOpenPanelResultListener> >=^{WebOpenPanelResultListener}}{RefPtr<WebKit::NotificationPermissionRequestManager, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequestManager> >=^{NotificationPermissionRequestManager}}{Ref<WebKit::WebUserContentController, WTF::DumbPtrTraits<WebKit::WebUserContentController> >=^{WebUserContentController}}{UniqueRef<WebKit::GeolocationPermissionRequestManager>={unique_ptr<WebKit::GeolocationPermissionRequestManager, std::__1::default_delete<WebKit::GeolocationPermissionRequestManager> >={__compressed_pair<WebKit::GeolocationPermissionRequestManager *, std::__1::default_delete<WebKit::GeolocationPermissionRequestManager> >=^{GeolocationPermissionRequestManager}}}}{UniqueRef<WebKit::UserMediaPermissionRequestManager>={unique_ptr<WebKit::UserMediaPermissionRequestManager, std::__1::default_delete<WebKit::UserMediaPermissionRequestManager> >={__compressed_pair<WebKit::UserMediaPermissionRequestManager *, std::__1::default_delete<WebKit::UserMediaPermissionRequestManager> >=^{UserMediaPermissionRequestManager}}}}{unique_ptr<WebCore::PrintContext, std::__1::default_delete<WebCore::PrintContext> >={__compressed_pair<WebCore::PrintContext *, std::__1::default_delete<WebCore::PrintContext> >=^{PrintContext}}}{SandboxExtensionTracker={RefPtr<WebKit::SandboxExtension, WTF::DumbPtrTraits<WebKit::SandboxExtension> >=^{SandboxExtension}}{RefPtr<WebKit::SandboxExtension, WTF::DumbPtrTraits<WebKit::SandboxExtension> >=^{SandboxExtension}}{RefPtr<WebKit::SandboxExtension, WTF::DumbPtrTraits<WebKit::SandboxExtension> >=^{SandboxExtension}}}{RefPtr<WebKit::SandboxExtension, WTF::DumbPtrTraits<WebKit::SandboxExtension> >=^{SandboxExtension}}{Vector<WTF::RefPtr<WebKit::SandboxExtension, WTF::DumbPtrTraits<WebKit::SandboxExtension> >, 0, WTF::CrashOnOverflow, 16>=^{RefPtr<WebKit::SandboxExtension, WTF::DumbPtrTraits<WebKit::SandboxExtension> >}II}{HysteresisActivity={Function<void (PAL::HysteresisState)>={unique_ptr<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase> >={__compressed_pair<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase> >=^{CallableWrapperBase}}}}{Seconds=d}B{Timer<PAL::HysteresisActivity>=^^?{Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> >=^{RunLoop}}{RetainPtr<__CFRunLoopTimer *>=^v}^{HysteresisActivity}}}BBBBBBBBBBI{HashSet<unsigned long, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long> >={HashTable<unsigned long, unsigned long, WTF::IdentityExtractor, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<unsigned long> >=^QIIII}}{IntSize=ii}B{Optional<WebCore::IntSize>=B(constexpr_storage_t<WebCore::IntSize>=C{IntSize=ii})}BBBBBBB{RefPtr<WebCore::Element, WTF::DumbPtrTraits<WebCore::Element> >=^{Element}}BB{Timer=^^?{MonotonicTime=d}{Seconds=d}B{RefPtr<WebCore::ThreadTimerHeapItem, WTF::DumbPtrTraits<WebCore::ThreadTimerHeapItem> >=^{ThreadTimerHeapItem}}{Ref<WTF::Thread, WTF::DumbPtrTraits<WTF::Thread> >=^{Thread}}{Function<void ()>={unique_ptr<WTF::Function<void ()>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> >={__compressed_pair<WTF::Function<void ()>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> >=^{CallableWrapperBase}}}}}{Vector<WTF::Function<void (bool)>, 0, WTF::CrashOnOverflow, 16>=^{Function<void (bool)>}II}B{HashSet<WTF::String, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}IIII}}{Color=(?=Q^{ExtendedColor})}{HashSet<unsigned int, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >={HashTable<unsigned int, unsigned int, WTF::IdentityExtractor, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned int> >=^IIIII}}Ii{Optional<WebCore::ScrollbarOverlayStyle>=B(constexpr_storage_t<WebCore::ScrollbarOverlayStyle>=Ci)}B{OptionSet<WebCore::ActivityState::Flag>=I}B{UserActivity={Function<void (PAL::HysteresisState)>={unique_ptr<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase> >={__compressed_pair<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase> >=^{CallableWrapperBase}}}}{Seconds=d}B{Timer<PAL::HysteresisActivity>=^^?{Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> >=^{RunLoop}}{RetainPtr<__CFRunLoopTimer *>=^v}^{HysteresisActivity}}{Impl={RetainPtr<id>=^v}{RetainPtr<NSString>=^v}}}{HysteresisActivity={Function<void (PAL::HysteresisState)>={unique_ptr<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase> >={__compressed_pair<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (PAL::HysteresisState)>::CallableWrapperBase> >=^{CallableWrapperBase}}}}{Seconds=d}B{Timer<PAL::HysteresisActivity>=^^?{Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> >=^{RunLoop}}{RetainPtr<__CFRunLoopTimer *>=^v}^{HysteresisActivity}}}Q{Optional<WebKit::WebsitePoliciesData>=B(storage_t<WebKit::WebsitePoliciesData>=C{WebsitePoliciesData=BB{OptionSet<WebKit::WebsiteAutoplayQuirk>=I}i{Vector<WebCore::HTTPHeaderField, 0, WTF::CrashOnOverflow, 16>=^{HTTPHeaderField}II}i{Optional<WebKit::WebsiteDataStoreParameters>=B(storage_t<WebKit::WebsiteDataStoreParameters>=C{WebsiteDataStoreParameters={Vector<unsigned char, 0, WTF::CrashOnOverflow, 16>=*II}{Handle={unique_ptr<WebKit::SandboxExtensionImpl, std::__1::default_delete<WebKit::SandboxExtensionImpl> >={__compressed_pair<WebKit::SandboxExtensionImpl *, std::__1::default_delete<WebKit::SandboxExtensionImpl> >=^{SandboxExtensionImpl}}}}{Vector<WebCore::Cookie, 0, WTF::CrashOnOverflow, 16>=^{Cookie}II}{NetworkSessionCreationParameters={SessionID=Q}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}B{RetainPtr<const __CFDictionary *>=^v}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}B{Seconds=d}{URL={String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}b1b1b1b3b26IIIIIII}{URL={String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}b1b1b1b3b26IIIIIII}}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{Handle={unique_ptr<WebKit::SandboxExtensionImpl, std::__1::default_delete<WebKit::SandboxExtensionImpl> >={__compressed_pair<WebKit::SandboxExtensionImpl *, std::__1::default_delete<WebKit::SandboxExtensionImpl> >=^{SandboxExtensionImpl}}}}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{Handle={unique_ptr<WebKit::SandboxExtensionImpl, std::__1::default_delete<WebKit::SandboxExtensionImpl> >={__compressed_pair<WebKit::SandboxExtensionImpl *, std::__1::default_delete<WebKit::SandboxExtensionImpl> >=^{SandboxExtensionImpl}}}}})}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}})}BBBBi{WallTime=d}C{String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}{Optional<double>=B(constexpr_storage_t<double>=Cd)}{HashMap<WTF::String, WTF::RefPtr<WebKit::WebURLSchemeHandlerProxy, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandlerProxy> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RefPtr<WebKit::WebURLSchemeHandlerProxy, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandlerProxy> > > >={HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::RefPtr<WebKit::WebURLSchemeHandlerProxy, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandlerProxy> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::RefPtr<WebKit::WebURLSchemeHandlerProxy, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandlerProxy> > > >, WTF::StringHash, WTF::HashMap<WTF::String, WTF::RefPtr<WebKit::WebURLSchemeHandlerProxy, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandlerProxy> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RefPtr<WebKit::WebURLSchemeHandlerProxy, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandlerProxy> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> >=^{KeyValuePair<WTF::String, WTF::RefPtr<WebKit::WebURLSchemeHandlerProxy, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandlerProxy> > >}IIII}}{HashMap<unsigned long long, WebKit::WebURLSchemeHandlerProxy *, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WebKit::WebURLSchemeHandlerProxy *> >={HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WebKit::WebURLSchemeHandlerProxy *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WebKit::WebURLSchemeHandlerProxy *> >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, WebKit::WebURLSchemeHandlerProxy *, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WebKit::WebURLSchemeHandlerProxy *> >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> >=^{KeyValuePair<unsigned long long, WebKit::WebURLSchemeHandlerProxy *>}IIII}}{HashMap<unsigned long long, WTF::Function<void (bool)>, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::Function<void (bool)> > >={HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::Function<void (bool)> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::Function<void (bool)> > >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::Function<void (bool)>, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::Function<void (bool)> > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> >=^{KeyValuePair<unsigned long long, WTF::Function<void (bool)> >}IIII}}{HashMap<unsigned long long, unsigned long long, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<unsigned long long> >={HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, unsigned long long>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, unsigned long long> >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, unsigned long long, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<unsigned long long> >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> >=^{KeyValuePair<unsigned long long, unsigned long long>}IIII}}{OptionSet<WebKit::WebPage::LayerTreeFreezeReason>=I}BB{WeakPtr<WebKit::RemoteObjectRegistry>={RefPtr<WTF::WeakReference<WebKit::RemoteObjectRegistry>, WTF::DumbPtrTraits<WTF::WeakReference<WebKit::RemoteObjectRegistry> > >=^{WeakReference<WebKit::RemoteObjectRegistry>}}}}'
    ],
  )
  Pointer setWebPage(
    Pointer arg,
  ) {
    _ensureDynamicLibraryHasBeenOpened();
    return _objc_call.call_ptr_ptr_ptr_returns_ptr(
      this,
      _objc.getSelector(
        'setWebPage:',
      ),
      arg,
    );
  }
}
